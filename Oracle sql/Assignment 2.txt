create table worker(
worker_id number GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
first_name varchar(15),
last_name varchar(15),
salary number(15),
joining_date timestamp,
department varchar(25)
);

insert into worker values (1,'Monika', 'Arora', 100000, '14-feb-2020 09.00.00', 'HR');
insert into worker values (2, 'Niharika', 'Verma', 80000, '14-jun-2011 09.00.00', 'Admin');
insert into worker values (3, 'Vishal', 'Singhal', 300000, '14-feb-20 09.00.00', 'HR');
insert into worker values (4, 'Amitabh', 'Singh', 500000, '14-feb-20 09.00.00', 'Admin');
insert into worker values (5, 'Vivek', 'Bhati', 500000, '14-jun-11 09.00.00', 'Admin');
insert into worker values (6, 'Vipul', 'Diwan', 200000, '14-jun-11 09.00.00', 'Account');
insert into worker values (7, 'Satish', 'Kumar', 75000, '14-jan-20 09.00.00', 'Account');
insert into worker values (8, 'Geetika', 'Chauhan', 90000, '14-apr-11 09.00.00', 'Admin');


create table bonus(
worker_ref_id number(10),
bonus_amount number(10),
bonus_date timestamp,
foreign key (worker_ref_id)
references worker (worker_id)
on delete cascade);

insert into bonus values (1, 5000, TIMESTAMP '2020-02-16 10:00:00');
insert into bonus values (2, 3000, TIMESTAMP '2011-06-16 10:00:00');
insert into bonus values (3, 4000, TIMESTAMP '2020-02-16 10:00:00');
insert into bonus values (1, 4500, TIMESTAMP '2020-02-16 10:00:00');
insert into bonus values (2, 3500, TIMESTAMP '2011-06-16 10:00:00');

create table title(
worker_ref_id int,
worker_title char(25),
affected_from timestamp,
foreign key (worker_ref_id)
references worker (worker_id)
on delete cascade);

insert into title values (1,'manager', TIMESTAMP '2016-02-20 00:00:00');
insert into title values (2,'executive', TIMESTAMP '2016-02-20 00:00:00');
insert into title values (8,'executive', TIMESTAMP '2016-06-11 00:00:00');
insert into title values (5,'manager', TIMESTAMP '2016-06-11 00:00:00');
insert into title values (4,'asst.manager', TIMESTAMP '2016-06-11 00:00:00');
insert into title values (7,'executive', TIMESTAMP '2016-06-11 00:00:00');
insert into title values (6,'lead', TIMESTAMP '2016-06-11 00:00:00');
insert into title values (3,'lead', TIMESTAMP '2016-06-11 00:00:00');

Q1: Query to fetch "first_name" from the worker table using the alias name <worker_name>.

select first_name as worker_name from worker;

Q2: Query to fetch "first_name" from the worker table in upper case.

select upper(first_name) as upper_first_name from worker;

Q3: Query to fetch unique values of Department from the worker table.

select distinct department from worker;

Q4: Query to print the first three characters of first_name from the worker table.

select substr(first_name, 1, 3) as first_three_chars from worker;

Q5: Query to find the position of the alphabet ('a') in the first name column 'Amitabh' from the worker table.

select instr(first_name, 'A') as position_of_a from worker where first_name = 'Amitabh';

Q6: Query to print the first_name from the worker table after removing white spaces from the right side.

select rtrim(first_name) as trimmed_first_name from worker;

Q7: Query to print the Department from the worker table after removing white spaces from the left side.

select ltrim(department) as trimmed_department from worker;

Q8: Query to fetch unique values of Department from the worker table and print its length.

select distinct department, length(department) as department_length from worker;

Q9: Query to print the first_name from the worker_table after replacing 'a' with 'A'.

select replace(first_name, 'a', 'A') as replaced_first_name from worker;

Q10: Query to print the FIRST_NAME and LAST_NAME from the worker table into a single column COMPLETE_NAME. A space char should separate them.

select first_name || '$' || last_name as complete_name from worker;

Q11: Query to print all worker details from the worker table order by first_name ascending.

select * from  worker order by first_name asc;

Q12: Query to print all worker details from the worker table order by first_name.

select * from  worker order by first_name;

Q13: Query to print details for workers with the first name "Vipul" and "Satish" from the worker table.

select * from  worker where first_name in ("Vipul and "Sathish");

Q14: Query to print details of workers excluding first names "Vipul" and "Satish" from the worker table.

select * from  worker where first_name not in ("Vipul and "Sathish");

Q15: Query to print details of workers with Department name as "Admin".

select department as Admin from worker;

Q16: Query to print details of workers whose first_name contains 'a'.

select * from worker where first_name like '%a%';

Q17: Query to print details of workers whose first_name ends with 'a'.

select * from worker where first_name like '%a';

Q18: Query to print details of workers whose first_name ends with 'h' and contains six alphabets.

select * from worker where first_name like '_____h';

Q19: Query to print details of workers whose SALARY lies between 100000 and 500000.

select * from worker where salary between 100000 and 500000;

Q20: Query to print details of workers who joined in Feb'2014.

select * from worker where extract(month from joining_date) = 2 and extract (year from joining_date) = 2014; 

Q21: Query to fetch the count of employees working in the department 'Admin'.

select count(*) as employees from worker where department = 'Admin';

Q22: Query to fetch worker names with salaries>=50000 and <=100000.

select first_name, last_name from worker where salary between 50000 and 100000;

Q23: Query to fetch the number of workers for each department in descending order.

select department, count(*) as total_employees from worker group by department order by total_employees desc;

Q24: Query to print details of workers who are also managers.

select w.* from worker w join title t on w.worker_id = t.worker_ref_id where t.worker_title = 'manager';

Q25: Query to fetch duplicate records having matching data in some fields of a table.

select first_name, count(*) as duplicate_count from worker group by first_name having count(*) > 1;

Q26: Query to show only odd rows from a table.

select * from (select t.*, rownum as rn from worker t) where mod(rn, 2) = 1;


Q27: Query to show only even rows from a table.

select * from (select t.*, rownum as rn from worker t) where mod(rn, 2) = 0;

Q28: Query to clone a new table from another table.

create table worker_clone as select * from worker;


Q29: Query to fetch intersecting records of two tables.

select worker_id from worker intersect select worker_ref_id from bonus;


Q30: Query to show records from one table that another table does not have

select * from worker where not exists (select 1 from bonus where worker.worker_id = bonus.worker_ref_id);


Q31: Query to show the current date and time

select to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') as current_date_time from dual;

Q32: Query to show the top n (say 10) records of a table.

select * from (select * from worker order by worker_id) where rownum <= 10;

Q33: Query to determine the nth (say n=5) highest salary from a table.

select salary from (select distinct salary from worker order by salary desc) where rownum <= 5 minus select salary from (select distinct salary from worker order by salary desc) where rownum <= 4;

Q34: Query to determine the 5th highest salary without using the TOP or limit method.

select distinct salary from worker w1 where 5 = (select count(distinct w2.salary) from worker w2 where w2.salary >= w1.salary);

Q35: Query to fetch the list of employees with the same salary.

select salary, count(*) as employee_count from worker group by salary having count(*) > 1;



